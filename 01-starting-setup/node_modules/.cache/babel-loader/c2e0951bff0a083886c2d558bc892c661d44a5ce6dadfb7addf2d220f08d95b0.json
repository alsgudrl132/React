{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/React/01-starting-setup/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n  // let filterInfoText = '2019, 2021 & 2022';\n\n  // if (filteredYear === '2019') {\n  //     filterInfoText = '2020, 2021 & 2022';\n  // } else if (filteredYear === '2021') {\n  //     filterInfoText = '2019, 2020 & 2022';\n  // } else if (filteredYear === '2022') {\n  //     filterInfoText = '2019, 2020 & 2021';\n  // }\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() == filteredYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeHandler: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","children","className","selected","onChangeHandler","fileName","_jsxFileName","lineNumber","columnNumber","map","title","amount","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/React/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\n\nconst Expenses = (props) => {\n    const [filteredYear, setFilteredYear] = useState('2020');\n    // let filterInfoText = '2019, 2021 & 2022';\n\n    // if (filteredYear === '2019') {\n    //     filterInfoText = '2020, 2021 & 2022';\n    // } else if (filteredYear === '2021') {\n    //     filterInfoText = '2019, 2020 & 2022';\n    // } else if (filteredYear === '2022') {\n    //     filterInfoText = '2019, 2020 & 2021';\n    // }\n\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear);\n    };\n\n    const filteredExpenses = props.items.filter((expense) => {\n        return expense.date.getFullYear().toString() == filteredYear;\n    });\n\n    return (\n        <div>\n            <Card className=\"expenses\">\n                <ExpensesFilter selected={filteredYear} onChangeHandler={filterChangeHandler} />\n                {/* <p>Data for year {filterInfoText} is hidden.</p> */}\n                {filteredExpenses.map((expense) => (\n                    <ExpenseItem title={expense.title} amount={expense.amount} date={expense.date} />\n                ))}\n            </Card>\n        </div>\n    );\n};\n\nexport default Expenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EACxD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMW,mBAAmB,GAAIC,YAAY,IAAK;IAC1CF,eAAe,CAACE,YAAY,CAAC;EACjC,CAAC;EAED,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAAEC,OAAO,IAAK;IACrD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,IAAIV,YAAY;EAChE,CAAC,CAAC;EAEF,oBACIJ,OAAA;IAAAe,QAAA,eACIf,OAAA,CAACH,IAAI;MAACmB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACtBf,OAAA,CAACF,cAAc;QAACmB,QAAQ,EAAEb,YAAa;QAACc,eAAe,EAAEZ;MAAoB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAE/Ed,gBAAgB,CAACe,GAAG,CAAEZ,OAAO,iBAC1BX,OAAA,CAACJ,WAAW;QAAC4B,KAAK,EAAEb,OAAO,CAACa,KAAM;QAACC,MAAM,EAAEd,OAAO,CAACc,MAAO;QAACb,IAAI,EAAED,OAAO,CAACC;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACnF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACnB,EAAA,CA/BIF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}